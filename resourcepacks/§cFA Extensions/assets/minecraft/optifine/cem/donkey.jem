{
	"credit": "Created by FreshLX for Fresh Animations",
	"textureSize": [128, 64],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, -22, 9],
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations",
					"invertAxis": "xy",
					"translate": [0, 0, 0]
				}
			],
			"animations": [
				{
					"var.testing": "0",
					"var.rearing": "if(neck.ty<4, -(neck.ty-4)/8*(1-var.testing), 0)*(1-var.testing) +clamp(-0.5 +cos(age/40)*7, 0, 1)*var.testing*0",
					"var.ls": " limb_swing*0.75/if(is_child, 1.8, 1)",
					"var.r": "random(id)*pi*4",
					"var.k": "(limb_swing/if(!is_on_ground&&is_in_water, 4, 20)+age)",
					"var.b": "   var.k/if(is_child, 35, 70)*pi*2 +var.r",
					"var.swim": "var.k/if(is_child, 10, 15)*pi*1.5 +var.r",
					"var.run": "    clamp(cos((limb_speed*pi)-pi    )*1.1, 0, 1)",
					"var.walk": "(1-clamp(cos((limb_speed*pi)-pi*1.2)*1.1, 0, 1))",
					"var.walk_speed": "clamp(0.3+limb_speed*4, 0, 1)",
					"var.nov1": "clamp( if( is_in_water || !is_on_ground || neck.rx>=torad(90), 0, (0.5-0.5*cos( clamp((if(is_ridden, -145.7, -145.3) +sin(var.r +age/if(is_ridden, 560, 280))*146)*if(is_ridden, 4, 2), 0, 1)*pi )) ), 0, clamp(2-limb_speed*1.5, 0, if(neck.rx>=torad(90), 0, 1)) )"
				},
				{
					"body.rx": "if(!is_on_ground&&is_in_water, torad(-5) +sin(pi/4+var.swim*2)/30, ( (sin(var.ls)/20 -cos(pi/4+var.ls)/16)*limb_speed*if(is_child, 2, 0.7)*(1-var.rearing/if(is_on_ground, 1.2, 3)) )*var.run  +(sin(-pi/4+var.ls*2)/30*var.walk_speed)*var.walk ) +sin(var.b-torad(45))/120 +(-0.7 +sin(var.k/2 +var.r)/25)*var.rearing",
					"body.ry": "( sin(-pi/4 +var.r+age/1.5)/40 )/10*var.nov1",
					"body.rz": "(-sin(var.ls)/40*var.walk_speed)*var.walk +( sin(-pi/4 +var.r+age/1.5)/40 )*var.nov1",
					"body.tx": "(-sin(var.ls)/16*var.walk_speed)*var.walk",
					"body.ty": "11.3 +if(!is_on_ground&&is_in_water, if(is_ridden, 1, 11), (cos(var.ls +cos(var.ls)/5)*1.2*limb_speed*if(is_child, 2, 1)*(1-var.rearing/if(is_on_ground, 2.5, 0.75)))*var.run +( (-cos(var.ls*2) +2)/4*var.walk_speed*if(is_child, 2, 1))*var.walk ) +sin(var.b)/12",
					"body.tz": "5 +if(!is_on_ground&&is_in_water, 0, (cos(var.ls*2)/4*var.walk_speed)*var.walk )",
					"neck2.rx": "if(!is_on_ground&&is_in_water, torad(5) -sin(pi/4+var.swim*2)/8/3, (cos(pi/4+var.ls)/8*limb_speed*(1-var.rearing*0.75))*var.run +(cos(var.ls*2)/20*var.walk_speed)*var.walk ) +clamp(neck.rx, torad(10), torad(140))*clamp(1-limb_speed*2, 0, 1) +(torad(45) +torad(head_pitch)/2)*clamp((limb_speed*2), 0, 1) +cos(var.b)/80 -torad(30)*limb_speed*var.rearing +(-body.rx*1.2 -cos(var.k/2 +var.r)/25*var.rearing) +torad(30)*var.nov1",
					"neck2.ry": "clamp(torad(head_yaw)/2, torad(-20), torad(20)) +( cos(var.r+age/1.5)/6 )*var.nov1",
					"neck2.rz": "neck.rz -body.rz +( cos(var.r+age/1.5)/4 )*var.nov1",
					"neck2.tx": "clamp(-torad(head_yaw)*2.5, -2, 2) -( cos(var.r+age/1.5)*1.3 )*var.nov1",
					"neck2.ty": "-20.5 +if(!is_on_ground&&is_in_water, -sin(pi/4+var.swim*2)/3, (-sin(-pi/2+var.ls)*limb_speed*(1-var.rearing*0.75))*var.run +(cos(var.ls*2)/2*var.walk_speed)*var.walk) +clamp( torad(head_pitch)*3, -2, 4) +limb_speed +var.rearing*2.5 +if(neck.ty>4, neck.ty-4, 0)*clamp(1-limb_speed*2, 0, 1) +if(is_child, clamp(-2+limb_speed*4, -2, 0) +if(neck2.rx>=torad(90), 2, 0), 0) +( 2 )*var.nov1",
					"neck2.tz": "-11.5 +if(!is_on_ground&&is_in_water,  sin(pi/4+var.swim*2)/3, 0 ) +clamp(-torad(head_pitch)*3, -0, 2) +(1 )*var.nov1",
					"neck2.sx": "if(is_child, 1.1, 1)",
					"neck2.sy": "neck2.sx",
					"neck2.sz": "neck2.sx",
					"head2.rx": "if(!is_on_ground&&is_in_water, cos(var.swim*2)/30 +torad(-10), (-cos(var.ls)/6*limb_speed*(1-var.rearing*0.75))*var.run +(-cos(var.ls*2)/20*clamp(limb_speed*4, 0, 1)/1.5)*var.walk ) -torad(20)*limb_speed*(1-var.rearing) +if(neck2.rx>=torad(90), -torad(20), 0) -torad(30)*var.nov1",
					"head2.ry": "clamp(torad(head_yaw)/10, torad(-10), torad(10)) -( sin(var.r+age/1.5)/8 )*var.nov1",
					"head2.rz": "           -( sin(var.r+age/1.5)/3   )*var.nov1",
					"head2.tx": "head2.ry*2 +( sin(var.r+age/1.5)/1.3 )*var.nov1",
					"head2.ty": "-5.5 -1*var.nov1",
					"head2.tz": "2 -0.5*var.nov1",
					"neck3.sy": "1 -clamp(-head2.rx/5, 0, 0.2)",
					"neck3.sx": "1 -0.01"
				},
				{
					"back_right_leg.rx": "  sin(var.b)/40/if(is_child, 1.5, 1)           +if(!is_on_ground&&is_in_water, torad( 5) +sin(pi/4 +var.swim)/3  ,  ( (sin(torad(-90 +30    )+var.ls -cos(torad(-90 +30    )+var.ls)/3*clamp(-7+limb_speed*8, 0, 1))/2)*limb_speed*if(is_child, 1, 1.2) *if(is_on_ground, 1, (1-var.rearing)) +torad(5) )*var.run  +(asin(-cos(torad(30)+var.ls))/3*var.walk_speed +torad(5)          *(1-var.rearing)  )*var.walk  )                 +(-torad(10))*var.rearing/if(is_child, 2, 1)",
					"back_left_leg.rx": "   sin(var.b)/40/if(is_child, 1.5, 1)           +if(!is_on_ground&&is_in_water, torad( 5) -sin(pi/4 +var.swim)/3  ,  ( (sin(torad(  0        )+var.ls -cos(torad(  0        )+var.ls)/3*clamp(-7+limb_speed*8, 0, 1))/2)*limb_speed*if(is_child, 1, 1.2) *if(is_on_ground, 1, (1-var.rearing)) +torad(5) )*var.run  +(asin( cos(torad(30)+var.ls))/3*var.walk_speed +torad(5)          *(1-var.rearing)  )*var.walk  )                 +( torad(15))*var.rearing/if(is_child, 2, 1)",
					"front_right_leg.rx": "-sin(var.b)/40/if(is_child, 1.5, 1) -torad(2) +if(!is_on_ground&&is_in_water, torad(-15) +sin(     var.swim)/3  ,  ( (sin(torad(180 +20 +30)+var.ls +cos(torad(180 +20 +30)+var.ls)/3*clamp(-7+limb_speed*8, 0, 1))/2)*limb_speed*if(is_child, 1, 1.2)                                      -torad(10) )*var.run  +(asin(-sin(          var.ls))/3*var.walk_speed -torad(5)*clamp(limb_speed*6, 0, 1)  )*var.walk  )*(1-var.rearing) +(-torad(70) +sin(var.k/2 +var.r)/2.5)*var.rearing",
					"front_left_leg.rx": " -sin(var.b)/40/if(is_child, 1.5, 1) -torad(2) +if(!is_on_ground&&is_in_water, torad(-15) -sin(     var.swim)/3  ,  ( (sin(torad(-90     +30)+var.ls +cos(torad(-90     +30)+var.ls)/3*clamp(-7+limb_speed*8, 0, 1))/2)*limb_speed*if(is_child, 1, 1.2)                                      -torad(10) )*var.run  +(asin( sin(          var.ls))/3*var.walk_speed -torad(5)*clamp(limb_speed*6, 0, 1)  )*var.walk  )*(1-var.rearing) +(-torad(70) -sin(var.k/2 +var.r)/2.5)*var.rearing",
					"back_right_cannon.rx": "-sin(var.b)/20/if(is_child, 1.5, 1)           +if(!is_on_ground&&is_in_water, clamp(torad(-20) +cos(pi/4 +var.swim)/2 ,-pi/2, 0),  ( clamp(torad(-10) +sin(torad(  0 +30    )+var.ls)/1.5, torad(-70), 0)*limb_speed *if(is_on_ground, 1, (1-var.rearing)) )*var.run  +(clamp(sin(torad( 0  +30)+var.ls), torad(-70), 0)/1.5*clamp(limb_speed*6, 0, 1)*(1-var.rearing)  )*var.walk  )                 +(-torad(18) -asin(-cos(torad(30)+var.ls))/3*var.walk_speed)*var.rearing/if(is_child, 2, 1) -torad(10)",
					"back_left_cannon.rx": " -sin(var.b)/20/if(is_child, 1.5, 1)           +if(!is_on_ground&&is_in_water, clamp(torad(-20) -cos(pi/4 +var.swim)/2 ,-pi/2, 0),  ( clamp(torad(-10) +sin(torad( 90        )+var.ls)/1.5, torad(-70), 0)*limb_speed *if(is_on_ground, 1, (1-var.rearing)) )*var.run  +(clamp(sin(torad(180 +30)+var.ls), torad(-70), 0)/1.5*clamp(limb_speed*6, 0, 1)*(1-var.rearing)  )*var.walk  )                 +(-torad(35) -asin( cos(torad(30)+var.ls))/6*var.walk_speed)*var.rearing/if(is_child, 2, 1) -torad(10)",
					"front_right_cannon.rx": "sin(var.b)/20/if(is_child, 1.5, 1) +torad(2) +if(!is_on_ground&&is_in_water, clamp(torad( 30) -cos(     var.swim)/1.5, 0, pi/2),  ( clamp(torad( 20) +sin(torad( 90 +20 +30)+var.ls)/1.5, 0, torad( 70))*limb_speed *if(is_on_ground, 1, 0              ) )*var.run  +(clamp(sin(torad( 90    )+var.ls), 0, torad( 70))/1.5*clamp(limb_speed*6, 0, 1)                  )*var.walk  )*(1-var.rearing) +( torad(45) -cos(var.k/2 +var.r)/2.5)*var.rearing",
					"front_left_cannon.rx": " sin(var.b)/20/if(is_child, 1.5, 1) +torad(2) +if(!is_on_ground&&is_in_water, clamp(torad( 30) +cos(     var.swim)/1.5, 0, pi/2),  ( clamp(torad( 20) +sin(torad(180     +30)+var.ls)/1.5, 0, torad( 70))*limb_speed *if(is_on_ground, 1, 0              ) )*var.run  +(clamp(sin(torad(-90    )+var.ls), 0, torad( 70))/1.5*clamp(limb_speed*6, 0, 1)                  )*var.walk  )*(1-var.rearing) +( torad(45) +cos(var.k/2 +var.r)/2.5)*var.rearing",
					"back_right_hoof.rx": "     sin(var.b)/40/if(is_child, 1.5, 1)           +if(!is_on_ground&&is_in_water, clamp(torad( 20) -sin(     var.swim)/3, 0, pi/2),  ( (clamp(-(sin(torad(-90 +30    )+var.ls -cos(torad(-90 +30    )+var.ls)/3*clamp(-7+limb_speed*8, 0, 1))/2  )*limb_speed*if(is_child, 1, 1.2) +torad(3)     +sin(torad(-90 +30)+var.ls)*1.3*clamp( sin(torad(-90 +30)+var.ls)*2, 0, 1), 0, torad(70))*limb_speed )*if(is_on_ground, 1, (1-var.rearing)) )*var.run  +( clamp(sin(torad(180 +30)+var.ls), 0, torad( 70))*clamp(limb_speed*6, 0, 1-var.rearing) +( cos(torad(30)+var.ls)/3 +torad(5))*clamp( sin(torad(30)+var.ls)*2, 0, clamp(limb_speed*6, 0, 1)) +( asin(cos(torad(30)+var.ls))/10 +torad(5))*clamp(1-limb_speed*6, 0, 1) )*var.walk  )                 +( torad(30) +asin(-cos(torad(30)+var.ls))/4*var.walk_speed)*var.rearing/if(is_child, 2, 1)",
					"back_left_hoof.rx": "      sin(var.b)/40/if(is_child, 1.5, 1)           +if(!is_on_ground&&is_in_water, clamp(torad( 20) +sin(     var.swim)/3, 0, pi/2),  ( (clamp(-(sin(torad( 0         )+var.ls -cos(torad( 0         )+var.ls)/3*clamp(-7+limb_speed*8, 0, 1))/2  )*limb_speed*if(is_child, 1, 1.2) +torad(3)     +sin(torad( 0     )+var.ls)*1.3*clamp( sin(torad( 0     )+var.ls)*2, 0, 1), 0, torad(70))*limb_speed )*if(is_on_ground, 1, (1-var.rearing)) )*var.run  +( clamp(sin(torad( 0  +30)+var.ls), 0, torad( 70))*clamp(limb_speed*6, 0, 1-var.rearing) +(-cos(torad(30)+var.ls)/3 +torad(5))*clamp(-sin(torad(30)+var.ls)*2, 0, clamp(limb_speed*6, 0, 1)) +(-asin(cos(torad(30)+var.ls))/10 +torad(5))*clamp(1-limb_speed*6, 0, 1) )*var.walk  )                 +( torad(25) +asin( cos(torad(30)+var.ls))/6*var.walk_speed)*var.rearing/if(is_child, 2, 1)",
					"front_right_hoof.rx": "   -sin(var.b)/40/if(is_child, 1.5, 1)           +if(!is_on_ground&&is_in_water, clamp(torad(20) +sin(pi/4 +var.swim)/2, 0, pi/2),  (  clamp(-(sin(torad(180 +20 +30)+var.ls +cos(torad(180 +20 +30)+var.ls)/3*clamp(-7+limb_speed*8, 0, 1))/1.5)                                                                              +clamp( sin(torad(180    )+var.ls)  , 0, 1), 0, torad(70))*limb_speed                                        )*var.run  +( clamp(sin(torad( 90    )+var.ls), 0, torad( 70))*clamp(limb_speed*6, 0, 1            ) +( sin(          var.ls)/3 +torad(5))*clamp(-cos(          var.ls)*2, 0, clamp(limb_speed*6, 0, 1)) +( asin(sin(          var.ls))/10          )*clamp(1-limb_speed*6, 0, 1) )*var.walk  )*(1-var.rearing) +( torad(10) -cos(var.k/2 +var.r)/4                        )*var.rearing",
					"front_left_hoof.rx": "    -sin(var.b)/40/if(is_child, 1.5, 1)           +if(!is_on_ground&&is_in_water, clamp(torad(20) +sin(pi/4 +var.swim)/2, 0, pi/2),  (  clamp(-(sin(torad(-90     +30)+var.ls +cos(torad(-90     +30)+var.ls)/3*clamp(-7+limb_speed*8, 0, 1))/1.5)                                                                              +clamp( sin(torad(-90    )+var.ls)  , 0, 1), 0, torad(70))*limb_speed                                        )*var.run  +( clamp(sin(torad(-90    )+var.ls), 0, torad( 70))*clamp(limb_speed*6, 0, 1            ) +(-sin(          var.ls)/3 +torad(5))*clamp( cos(          var.ls)*2, 0, clamp(limb_speed*6, 0, 1)) +(-asin(sin(          var.ls))/10          )*clamp(1-limb_speed*6, 0, 1) )*var.walk  )*(1-var.rearing) +( torad(10) +cos(var.k/2 +var.r)/4                        )*var.rearing",
					"back_right_leg.ry": " body.ry",
					"back_left_leg.ry": "  body.ry -var.rearing/3.75*clamp(1-limb_speed*6, 0, 1)",
					"front_right_leg.ry": "body.ry",
					"front_left_leg.ry": " body.ry",
					"front_right_cannon.ry": "torad( 5)*clamp(1-limb_speed*6, 0, 1)",
					"front_left_cannon.ry": " torad(-5)*clamp(1-limb_speed*6, 0, 1)",
					"back_right_leg.rz": " if(!is_on_ground&&is_in_water, torad( 5)                , 0)",
					"back_left_leg.rz": "  if(!is_on_ground&&is_in_water, torad(-5)                , 0)",
					"front_right_leg.rz": "if(!is_on_ground&&is_in_water, torad(-0)*(1-var.rearing), 0) -var.rearing/7.5*0",
					"front_left_leg.rz": " if(!is_on_ground&&is_in_water, torad( 0)*(1-var.rearing), 0) +var.rearing/7.5*0",
					"back_right_leg.tx": " -3.5",
					"back_left_leg.tx": "   3.5 +var.rearing/7.5",
					"front_right_leg.tx": "-3.5",
					"front_left_leg.tx": "  3.5",
					"back_right_leg.ty": "  9 + if(!is_on_ground&&is_in_water, if(is_ridden, 1, 11)                          , sin(var.b)/12 +(cos(-pi/8+var.ls)*limb_speed*if(is_child, 2, 1)*(1-var.rearing/if(is_on_ground, 2.5, 0.75)) -0.2)*var.run  +( (1.5 -sin(torad(30)+var.ls)*1.1)*clamp((0.5 +sin(torad(30)+var.ls))*limb_speed*4, 0, 1) +0.35*clamp(1-limb_speed*6, 0, 1) )*var.walk) +(2)*var.rearing",
					"back_left_leg.ty": "   9 + if(!is_on_ground&&is_in_water, if(is_ridden, 1, 11)                          , sin(var.b)/12 +(cos(-pi/6+var.ls)*limb_speed*if(is_child, 2, 1)*(1-var.rearing/if(is_on_ground, 2.5, 0.75)) -0.2)*var.run  +( (1.5 +sin(torad(30)+var.ls)*1.1)*clamp((0.5 -sin(torad(30)+var.ls))*limb_speed*4, 0, 1) +0.35*clamp(1-limb_speed*6, 0, 1) )*var.walk) +(2)*var.rearing",
					"front_right_leg.ty": "10 + if(!is_on_ground&&is_in_water, if(is_ridden, 0, 10) +sin(pi/4+var.swim*2)/1.5, sin(var.b)/12 +(sin(      var.ls)*limb_speed*if(is_child, 2, 1)*(1-var.rearing/if(is_on_ground, 2.5, 0.75)) -0.5)*var.run  +( (1.3 +cos(    -pi/8+var.ls)*1.1)*clamp((0.5 -cos(          var.ls))*limb_speed*4, 0, 1) +0.15*clamp(1-limb_speed*6, 0, 1) )*var.walk) +(-10 +cos(var.k/2 +var.r)*3/2.5*0)*var.rearing",
					"front_left_leg.ty": " 10 + if(!is_on_ground&&is_in_water, if(is_ridden, 0, 10) +sin(pi/4+var.swim*2)/1.5, sin(var.b)/12 +(sin( pi/3+var.ls)*limb_speed*if(is_child, 2, 1)*(1-var.rearing/if(is_on_ground, 2.5, 0.75)) -0.5)*var.run  +( (1.3 -cos(    -pi/8+var.ls)*1.1)*clamp((0.5 +cos(          var.ls))*limb_speed*4, 0, 1) +0.15*clamp(1-limb_speed*6, 0, 1) )*var.walk) +(-10 -cos(var.k/2 +var.r)*3/2.5*0)*var.rearing",
					"back_right_leg.tz": " 7.5 + if(!is_on_ground&&is_in_water,  sin(pi/4 +var.swim), ( (sin(torad(-90 +30)+var.ls)  )*limb_speed*if(is_child, 1, 1.2) *if(is_on_ground, 1, (1-var.rearing)) )*var.run +(asin( sin(torad(-90)+var.ls) )/4*var.walk_speed*(1-var.rearing))*var.walk ) +var.rearing",
					"back_left_leg.tz": "  7.5 + if(!is_on_ground&&is_in_water, -sin(pi/4 +var.swim), ( (sin(torad( 0     )+var.ls)  )*limb_speed*if(is_child, 1, 1.2) *if(is_on_ground, 1, (1-var.rearing)) )*var.run +(asin( sin(torad( 90)+var.ls) )/4*var.walk_speed*(1-var.rearing))*var.walk ) +var.rearing",
					"front_right_leg.tz": "-11 + if(!is_on_ground&&is_in_water,  sin(      var.swim), ( (sin(torad(180 +20)+var.ls)/2)*limb_speed*if(is_child, 1, 1.2) *if(is_on_ground, 1, (1-var.rearing)) )*var.run +(asin( sin(torad(180)+var.ls) )/2*var.walk_speed*(1-var.rearing))*var.walk ) +( 4 +sin(var.k/2 +var.r)*2*0)*var.rearing",
					"front_left_leg.tz": " -11 + if(!is_on_ground&&is_in_water, -sin(      var.swim), ( (sin(torad(-90    )+var.ls)/2)*limb_speed*if(is_child, 1, 1.2) *if(is_on_ground, 1, (1-var.rearing)) )*var.run +(asin( sin(torad( 0 )+var.ls) )/2*var.walk_speed*(1-var.rearing))*var.walk ) +( 4 -sin(var.k/2 +var.r)*2*0)*var.rearing"
				},
				{
					"tail2.rx": "if(!is_on_ground&&is_in_water,-torad(10) -cos(var.swim*1.5)/8 , ( sin(var.ls-pi/3)/5*limb_speed )*var.run +(  sin(     var.ls*2)/12*var.walk_speed                                         )*var.walk -torad(15)     ) -sin(var.b)/30 +tail.rx -body.rx -pi/2 +torad(30)*var.testing",
					"tail3.rx": "if(!is_on_ground&&is_in_water,           -sin(var.swim*1.5)/8 , (-cos(var.ls-pi/3)/3*limb_speed )*var.run +((-cos(     var.ls*2)/12*var.walk_speed)                                        )*var.walk +cos(var.b)/30 ) +(          +cos(var.k/2 +var.r)/10)*var.rearing",
					"tail4.rx": "if(!is_on_ground&&is_in_water,            cos(var.swim*1.5)/8 , (-sin(var.ls-pi/3)/3*limb_speed )*var.run +((-sin(     var.ls*2)/8 *var.walk_speed) -torad(15)*clamp(1-limb_speed*2, 0, 1) )*var.walk +sin(var.b)/30 ) +(torad(10) +sin(var.k/2 +var.r)/10)*var.rearing",
					"tail2.ry": "if(!is_on_ground&&is_in_water,  sin(var.swim/1.2)/12, (-cos(var.ls/1.2 )/12*limb_speed)*var.run +(-cos(pi/4+var.ls  )/12*var.walk_speed)*var.walk)",
					"tail3.ry": "if(!is_on_ground&&is_in_water, -cos(var.swim/1.2)/10, (-sin(var.ls/1.2 )/12*limb_speed)*var.run +(-sin(pi/4+var.ls  )/12*var.walk_speed)*var.walk) +cos(var.k/2 +var.r)*clamp(sin((var.k/30) +var.r)/30, 0, 1)*3*0",
					"tail4.ry": "if(!is_on_ground&&is_in_water, -sin(var.swim/1.2)/10, ( cos(var.ls/1.2 )/12*limb_speed)*var.run +( cos(pi/4+var.ls  )/12*var.walk_speed)*var.walk) +sin(var.k/2 +var.r)*clamp(sin((var.k/30) +var.r)/30, 0, 1)*7*0",
					"tail2.rz": "-body.rz +sin(var.k/2 +var.r)*clamp(sin((var.k/30) +var.r)/30, 0, 1)*0      +(-cos(     var.ls  )/12*var.walk_speed)*var.walk",
					"tail2.ty": "-20.5",
					"mane2.ry": "( sin(var.r+age/1.5)/2 )*var.nov1",
					"right_ear2.rx": "-sin(pi/4+var.b)/20 +torad(10) +(sin(var.ls)/4*limb_speed )*var.walk +sin(torad(-60)+var.ls)/4*limb_speed*var.run -sin(torad(30)+var.k/2 +var.r)/6*var.rearing +clamp((-47 +sin(          var.r+age/26*2)*48)*clamp(-32 +cos(          (var.r+age/26)/1.5)*40 +cos(          (var.r+age/26)/4)*40, 0, 1), 0, 1)/4 *var.walk",
					"left_ear2.rx": " -sin(pi/4+var.b)/20 +torad(10) +(sin(var.ls)/4*limb_speed )*var.walk +sin(torad(-60)+var.ls)/4*limb_speed*var.run -sin(          var.k/2 +var.r)/6*var.rearing +clamp((-47 +sin(torad(90)+var.r+age/26*2)*48)*clamp(-32 +cos(torad(90)+(var.r+age/26)/1.5)*40 +cos(torad(90)+(var.r+age/26)/4)*40, 0, 1), 0, 1)/4 *var.walk",
					"right_ear2.ry": "clamp(torad( 12 +head_yaw/2), torad(-5), torad( 80)) +clamp((-47 +sin(torad( 5)+var.r+age/26*2)*48)*clamp(-32 +cos(torad( 5)+(var.r+age/26)/1.5)*40 +cos(torad( 5)+(var.r+age/26)/4)*40, 0, 1), 0, 1)/2 *var.walk +( torad( 25) )*var.nov1",
					"left_ear2.ry": " clamp(torad(-12 +head_yaw/2), torad(-80), torad( 5)) -clamp((-47 +sin(torad(95)+var.r+age/26*2)*48)*clamp(-32 +cos(torad(95)+(var.r+age/26)/1.5)*40 +cos(torad(95)+(var.r+age/26)/4)*40, 0, 1), 0, 1)/2 *var.walk +( torad(-25) )*var.nov1",
					"right_ear2.rz": "torad(-5) -( right_ear2.rx -sin(torad(-60)+var.ls)/2*limb_speed )/3 +( torad(-8) +cos(-pi/4+var.r+age/1.5) )*var.nov1",
					"left_ear2.rz": " torad( 5) +(  left_ear2.rx -sin(torad(-60)+var.ls)/2*limb_speed )/3 +( torad( 8) +cos(-pi/4+var.r+age/1.5) )*var.nov1",
					"right_eye.tz": "-3.144 +clamp( torad(head_yaw)/1.7, 0, 1)",
					"left_eye.tz": " -3.123 +clamp(-torad(head_yaw)/1.7, 0, 1)",
					"right_blink.sy": "clamp((1.5 -abs(sin(var.r+age/12)*6))*clamp(-32 +cos((var.r+age/12)/1.5)*40 +cos((var.r+age/12)/4)*40, 0, 1), 0, 1)",
					"left_blink.sy": "right_blink.sy",
					"right_blink.sz": "if(right_blink.sy==0||right_blink.sx==0, 0, 1)",
					"left_blink.sz": " if( left_blink.sy==0|| left_blink.sx==0, 0, 1)",
					"snout.rx": "torad(-5)*clamp(sin(var.r +age/55)*10, 0, clamp(var.rearing, 0, 1)) -clamp(-sin(hurt_time*pi/5)/24*hurt_time, 0, torad(15))/2 -if(neck2.rx>=torad(115), torad(8) +cos(age)/8, 0)/2",
					"jaw.rx": "  torad(10)*clamp(sin(var.r +age/55)*10, 0, clamp(var.rearing, 0, 1)) +clamp(-sin(hurt_time*pi/5)/24*hurt_time, 0, torad(15))   +if(neck2.rx>=torad(115), torad(8) +cos(age)/8, 0)"
				},
				{
					"right_saddle.rx": "-body.rx/1.2 +torad(20)*limb_speed +(sin(var.ls)/6*limb_speed)*var.run +(-sin(limb_swing*0.55)/10*limb_speed)*var.walk +(cos(var.k/2 +var.r)/6)*var.rearing",
					"left_saddle.rx": "right_saddle.rx",
					"right_saddle.rz": "( abs(sin(var.ls/2))/2*limb_speed)*var.run",
					"left_saddle.rz": "-right_saddle.rz",
					"right_rein2.rx": "-body.rx -neck2.rx -head2.rx +torad(head_pitch)/1.5 +(-cos(var.ls)/8*limb_speed)*var.run +(-sin(var.ls)/40*var.walk_speed)*var.walk +torad(10)*limb_speed",
					"left_rein2.rx": "right_rein2.rx",
					"right_rein2.ry": "torad( 4) -torad(head_yaw)/4",
					"left_rein2.ry": " torad(-4) -torad(head_yaw)/4",
					"right_rein2.rz": "torad(-5) +clamp(-torad(head_yaw)/4, torad(-20), 0)",
					"left_rein2.rz": " torad( 5) +clamp(-torad(head_yaw)/4, 0, torad( 20))",
					"right_rein3.rz": "(-abs(sin(pi/4 +var.ls /2))*2*limb_speed +torad(10)*limb_speed)*var.run +(-sin(var.ls)/40*var.walk_speed)*var.walk +sin(limb_swing+var.k/2)*clamp(sin(limb_swing+(var.k/20))/30, 0, 1) +(-sin(var.k/1.5)*2*-var.rearing/2.5)",
					"left_rein3.rz": "-right_rein3.rz",
					"right_rein2.visible": "is_ridden",
					"left_rein2.visible": " is_ridden",
					"headpiece_neck.rx": "neck2.rx",
					"headpiece_neck.ry": "neck2.ry",
					"headpiece_neck.rz": "neck2.rz",
					"headpiece_neck.tx": "neck2.tx",
					"headpiece_neck.ty": "neck2.ty",
					"headpiece_neck.tz": "neck2.tz",
					"headpiece_neck.sx": "neck2.sx",
					"headpiece_neck.sy": "neck2.sy",
					"headpiece_neck.sz": "neck2.sz",
					"headpiece_head.rx": "head2.rx",
					"headpiece_head.ry": "head2.ry",
					"headpiece_head.rz": "head2.rz",
					"headpiece_head.tx": "head2.tx"
				},
				{
					"right_chest_rotation.rx": "clamp( body.rz +if(!is_on_ground&&is_in_water, torad(-4) -cos(var.swim)/10, (-abs( cos(var.ls/2)/10*limb_speed)*2)*var.run +(    -abs( sin(torad( 90)+var.ls  )/10*limb_speed)*2)*var.walk ), torad(-90), 0) -torad(2)",
					"left_chest_rotation.rx": " clamp(-body.rz +if(!is_on_ground&&is_in_water, torad(-4) -cos(var.swim)/10, (-abs( cos(var.ls/2)/10*limb_speed)*2)*var.run +(    -abs( sin(torad(-90)+var.ls  )/10*limb_speed)*2)*var.walk ), torad(-90), 0) -torad(2)",
					"right_chest_rotation.rz": "               if(!is_on_ground&&is_in_water,             sin(var.swim)/20, (torad( 15)*limb_speed -sin(var.ls)/6*limb_speed)*var.run +(-sin(var.ls*2)/6 *limb_speed)*var.walk ) -body.rx +cos(torad(-20)+(limb_swing/2+age)/2)/5*var.rearing",
					"left_chest_rotation.rz": "                if(!is_on_ground&&is_in_water,             sin(var.swim)/20, (torad(-15)*limb_speed +sin(var.ls)/6*limb_speed)*var.run +( sin(var.ls*2)/6 *limb_speed)*var.walk ) +body.rx -cos(torad( 20)+(limb_swing/2+age)/2)/5*var.rearing"
				},
				{
					"child_back_right_leg.rx": " back_right_leg.rx",
					"child_back_left_leg.rx": "  back_left_leg.rx",
					"child_front_right_leg.rx": "front_right_leg.rx",
					"child_front_left_leg.rx": " front_left_leg.rx",
					"child_back_right_cannon.rx": " back_right_cannon.rx",
					"child_back_left_cannon.rx": "  back_left_cannon.rx",
					"child_front_right_cannon.rx": "front_right_cannon.rx",
					"child_front_left_cannon.rx": " front_left_cannon.rx",
					"child_back_right_hoof.rx": " back_right_hoof.rx",
					"child_back_left_hoof.rx": "  back_left_hoof.rx",
					"child_front_right_hoof.rx": "front_right_hoof.rx",
					"child_front_left_hoof.rx": " front_left_hoof.rx",
					"child_back_right_leg.ry": " back_right_leg.ry",
					"child_back_left_leg.ry": "  back_left_leg.ry",
					"child_front_right_leg.ry": "front_right_leg.ry",
					"child_front_left_leg.ry": " front_left_leg.ry",
					"child_front_right_cannon.ry": "front_right_cannon.ry",
					"child_front_left_cannon.ry": " front_left_cannon.ry",
					"child_back_right_leg.rz": " back_right_leg.rz",
					"child_back_left_leg.rz": "  back_left_leg.rz",
					"child_front_right_leg.rz": "front_right_leg.rz",
					"child_front_left_leg.rz": " front_left_leg.rz",
					"child_back_right_leg.tx": " back_right_leg.tx",
					"child_back_left_leg.tx": "  back_left_leg.tx",
					"child_front_right_leg.tx": "front_right_leg.tx",
					"child_front_left_leg.tx": " front_left_leg.tx",
					"child_back_right_leg.ty": " back_right_leg.ty +0.5",
					"child_back_left_leg.ty": "  back_left_leg.ty  +0.5",
					"child_front_right_leg.ty": "front_right_leg.ty +4",
					"child_front_left_leg.ty": " front_left_leg.ty  +4",
					"child_back_right_leg.tz": " back_right_leg.tz",
					"child_back_left_leg.tz": "  back_left_leg.tz",
					"child_front_right_leg.tz": "front_right_leg.tz",
					"child_front_left_leg.tz": " front_left_leg.tz"
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -13, -6],
			"boxes": [
				{
					"coordinates": [-5, 11, -12, 10, 10, 24],
					"uvNorth": [62, 24, 72, 34],
					"uvEast": [38, 24, 62, 34],
					"uvSouth": [96, 24, 106, 34],
					"uvWest": [72, 24, 96, 34],
					"uvUp": [72, 24, 62, 0],
					"uvDown": [82, 0, 72, 24]
				}
			],
			"submodels": [
				{
					"id": "neck2",
					"invertAxis": "xy",
					"translate": [0, 22, -9],
					"submodels": [
						{
							"id": "neck3",
							"invertAxis": "xy",
							"translate": [0, -5, 0],
							"boxes": [
								{
									"coordinates": [-2, 0.89808, -3.09808, 4, 14, 8],
									"uvNorth": [33, 9, 37, 23],
									"uvEast": [25, 9, 33, 23],
									"uvSouth": [45, 9, 49, 23],
									"uvWest": [37, 9, 45, 23],
									"uvUp": [37, 9, 33, 1],
									"uvDown": [41, 1, 37, 9]
								}
							]
						},
						{
							"id": "head2",
							"invertAxis": "xy",
							"translate": [0, 5.5, 2],
							"boxes": [
								{
									"coordinates": [-2.5, -0.40192, -5.12308, 5, 5, 7],
									"uvNorth": [7, 7, 12, 12],
									"uvEast": [0, 7, 7, 12],
									"uvSouth": [19, 7, 24, 12],
									"uvWest": [12, 7, 19, 12],
									"uvUp": [12, 7, 7, 0],
									"uvDown": [17, 0, 12, 7]
								}
							],
							"submodels": [
								{
									"id": "snout",
									"invertAxis": "xy",
									"translate": [0, 1.5, -5],
									"boxes": [
										{
											"coordinates": [-2, 0.07308, -5.62308, 4, 3, 6],
											"uvNorth": [6, 18, 10, 21],
											"uvEast": [0, 18, 6, 21],
											"uvSouth": [16, 18, 20, 21],
											"uvWest": [10, 18, 16, 21],
											"uvUp": [10, 18, 6, 12],
											"uvDown": [14, 12, 10, 18]
										}
									]
								},
								{
									"id": "jaw",
									"invertAxis": "xy",
									"translate": [0, 1.59808, -5.12308],
									"boxes": [
										{
											"coordinates": [-2, -2, -5, 4, 2, 5],
											"uvNorth": [6, 26, 10, 28],
											"uvEast": [1, 26, 6, 28],
											"uvSouth": [15, 26, 19, 28],
											"uvWest": [10, 26, 15, 28],
											"uvUp": [10, 26, 6, 21],
											"uvDown": [14, 21, 10, 26]
										}
									]
								},
								{
									"id": "left_eye",
									"invertAxis": "xy",
									"translate": [0, 2.5981, -3.1231],
									"boxes": [
										{
											"coordinates": [-2.525, 0, 0, 0.25, 1, 1],
											"uvNorth": [14, 12, 15, 13],
											"uvEast": [14, 12, 15, 13],
											"uvSouth": [14, 12, 15, 13],
											"uvWest": [14, 12, 15, 13],
											"uvUp": [14, 12, 15, 13],
											"uvDown": [14, 12, 15, 13]
										}
									]
								},
								{
									"id": "left_blink",
									"invertAxis": "xy",
									"translate": [-2.5, 3.5981, -2.1231],
									"boxes": [
										{
											"coordinates": [-0.025, -1, -1, 0.25, 1, 2],
											"uvNorth": [14, 13, 15, 14],
											"uvEast": [14, 13, 16, 14],
											"uvSouth": [15, 13, 16, 14],
											"uvWest": [14, 13, 16, 14],
											"uvUp": [14, 13, 16, 14],
											"uvDown": [14, 13, 16, 14],
											"sizeAdd": 0.02
										}
									]
								},
								{
									"id": "right_eye",
									"invertAxis": "xy",
									"translate": [0, 2.5981, -3.1231],
									"boxes": [
										{
											"coordinates": [2.275, 0, 0, 0.25, 1, 1],
											"uvNorth": [4, 12, 5, 13],
											"uvEast": [4, 12, 5, 13],
											"uvSouth": [4, 12, 5, 13],
											"uvWest": [4, 12, 5, 13],
											"uvUp": [4, 12, 5, 13],
											"uvDown": [4, 12, 5, 13]
										}
									]
								},
								{
									"id": "right_blink",
									"invertAxis": "xy",
									"translate": [2.5, 3.5981, -2.1231],
									"boxes": [
										{
											"coordinates": [-0.225, -1, -1, 0.25, 1, 2],
											"uvNorth": [4, 13, 5, 14],
											"uvEast": [3, 13, 5, 14],
											"uvSouth": [3, 13, 4, 14],
											"uvWest": [3, 13, 5, 14],
											"uvUp": [3, 13, 5, 14],
											"uvDown": [3, 13, 5, 14],
											"sizeAdd": 0.02
										}
									]
								},
								{
									"id": "left_ear2",
									"invertAxis": "xy",
									"translate": [-1, 5, 1.2],
									"boxes": [
										{
											"coordinates": [-1.5, -0.75, -1.01, 2, 7, 1],
											"uvNorth": [28, 1, 26, 8],
											"uvEast": [29, 1, 28, 8],
											"uvSouth": [31, 1, 29, 8],
											"uvWest": [26, 1, 25, 8],
											"uvUp": [26, 1, 28, 0],
											"uvDown": [28, 0, 30, 1]
										}
									]
								},
								{
									"id": "right_ear2",
									"invertAxis": "xy",
									"translate": [1, 4.75, 1.2],
									"boxes": [
										{
											"coordinates": [-0.5, -0.5, -1.01, 2, 7, 1],
											"uvNorth": [26, 1, 28, 8],
											"uvEast": [25, 1, 26, 8],
											"uvSouth": [29, 1, 31, 8],
											"uvWest": [28, 1, 29, 8],
											"uvUp": [28, 1, 26, 0],
											"uvDown": [30, 0, 28, 1]
										}
									]
								},
								{
									"id": "mane3",
									"invertAxis": "xy",
									"translate": [0, 4, 3]
								}
							]
						},
						{
							"id": "mane2",
							"invertAxis": "xy",
							"translate": [0, -1, 5],
							"boxes": [
								{
									"coordinates": [-1, -4.15192, -1.09808, 2, 16, 4],
									"uvNorth": [53, 5, 55, 21],
									"uvEast": [49, 5, 53, 21],
									"uvSouth": [59, 5, 61, 21],
									"uvWest": [55, 5, 59, 21],
									"uvUp": [55, 5, 53, 1],
									"uvDown": [57, 1, 55, 5]
								}
							]
						}
					]
				},
				{
					"id": "tail2",
					"invertAxis": "xy",
					"translate": [0, 21, 12],
					"rotate": [75, 0, 0],
					"boxes": [
						{
							"coordinates": [-1, -1, 0, 2, 2, 3],
							"uvNorth": [86, 4, 88, 6],
							"uvEast": [83, 4, 86, 6],
							"uvSouth": [91, 4, 93, 6],
							"uvWest": [88, 4, 91, 6],
							"uvUp": [88, 4, 86, 1],
							"uvDown": [90, 1, 88, 4]
						}
					],
					"submodels": [
						{
							"id": "tail3",
							"invertAxis": "xy",
							"translate": [0, 0, 3],
							"boxes": [
								{
									"coordinates": [-1.5, -2, 0, 3, 4, 7],
									"uvNorth": [93, 8, 96, 12],
									"uvEast": [86, 8, 93, 12],
									"uvSouth": [103, 8, 106, 12],
									"uvWest": [96, 8, 103, 12],
									"uvUp": [96, 8, 93, 1],
									"uvDown": [99, 1, 96, 8]
								}
							],
							"submodels": [
								{
									"id": "tail4",
									"invertAxis": "xy",
									"translate": [0.025, 0, 6.75],
									"rotate": [15, 0, 0],
									"boxes": [
										{
											"coordinates": [-1.525, -2, -0.25, 3, 4, 7],
											"uvNorth": [107, 13, 110, 17],
											"uvEast": [100, 13, 107, 17],
											"uvSouth": [117, 13, 120, 17],
											"uvWest": [110, 13, 117, 17],
											"uvUp": [110, 13, 107, 6],
											"uvDown": [113, 6, 110, 13],
											"sizeAdd": 0.02
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "saddle",
			"id": "saddle",
			"invertAxis": "xy",
			"translate": [0, -13, -6],
			"boxes": [
				{
					"coordinates": [-5, 21, -3, 10, 1, 8],
					"uvNorth": [73, 51, 83, 52],
					"uvEast": [65, 51, 73, 52],
					"uvSouth": [91, 51, 101, 52],
					"uvWest": [83, 51, 91, 52],
					"uvUp": [83, 51, 73, 43],
					"uvDown": [93, 43, 83, 51]
				},
				{
					"coordinates": [-1.5, 22, -3, 3, 1, 2],
					"uvNorth": [93, 54, 96, 55],
					"uvEast": [91, 54, 93, 55],
					"uvSouth": [98, 54, 101, 55],
					"uvWest": [96, 54, 98, 55],
					"uvUp": [96, 54, 93, 52],
					"uvDown": [99, 52, 96, 54]
				},
				{
					"coordinates": [-4, 22, 3, 8, 1, 2],
					"uvNorth": [67, 54, 75, 55],
					"uvEast": [65, 54, 67, 55],
					"uvSouth": [77, 54, 85, 55],
					"uvWest": [75, 54, 77, 55],
					"uvUp": [75, 54, 67, 52],
					"uvDown": [83, 52, 75, 54]
				}
			],
			"submodels": [
				{
					"id": "headpiece_neck",
					"invertAxis": "xy",
					"translate": [0.05, 22, -9],
					"submodels": [
						{
							"id": "headpiece_head",
							"invertAxis": "xy",
							"translate": [-0.05, 5.5, 2],
							"boxes": [
								{
									"coordinates": [-2.5, -0.40192, -10.87308, 5, 5, 12],
									"uvNorth": [43, 47, 48, 52],
									"uvEast": [31, 47, 43, 52],
									"uvSouth": [60, 47, 65, 52],
									"uvWest": [48, 47, 60, 52],
									"uvUp": [48, 47, 43, 35],
									"uvDown": [53, 35, 48, 47],
									"sizeAdd": 0.25
								}
							],
							"submodels": [
								{
									"id": "right_rein2",
									"invertAxis": "xy",
									"translate": [-3.1, 2.5, -7],
									"rotate": [90, 0, 0],
									"submodels": [
										{
											"id": "right_rein3",
											"invertAxis": "xy",
											"translate": [0.25, 0, 0],
											"boxes": [
												{
													"coordinates": [0, -2, 0, 0, 3, 16],
													"uvEast": [54, 39, 70, 42],
													"uvWest": [70, 39, 86, 42]
												}
											]
										}
									]
								},
								{
									"id": "left_rein2",
									"invertAxis": "xy",
									"translate": [3.1, 2.5, -7],
									"rotate": [90, 0, 0],
									"submodels": [
										{
											"id": "left_rein3",
											"invertAxis": "xy",
											"translate": [-0.25, 0, 0],
											"boxes": [
												{
													"coordinates": [0, -2, 0, 0, 3, 16],
													"uvEast": [54, 35, 70, 38],
													"uvWest": [70, 35, 86, 38]
												}
											]
										}
									]
								},
								{
									"id": "bits",
									"invertAxis": "xy",
									"translate": [0, 1.59808, -6.87308],
									"boxes": [
										{
											"coordinates": [-2.65, -1, -1, 1, 2, 2],
											"uvNorth": [38, 37, 39, 39],
											"uvEast": [36, 37, 38, 39],
											"uvSouth": [41, 37, 42, 39],
											"uvWest": [39, 37, 41, 39],
											"uvUp": [38, 37, 39, 35],
											"uvDown": [39, 35, 40, 37]
										},
										{
											"coordinates": [1.65, -1, -1, 1, 2, 2],
											"uvNorth": [39, 37, 38, 39],
											"uvEast": [41, 37, 39, 39],
											"uvSouth": [42, 37, 41, 39],
											"uvWest": [38, 37, 36, 39],
											"uvUp": [39, 37, 38, 35],
											"uvDown": [40, 35, 39, 37]
										}
									]
								}
							]
						}
					]
				},
				{
					"id": "left_saddle",
					"invertAxis": "xy",
					"translate": [-4.9, 21.9, 0.5],
					"boxes": [
						{
							"coordinates": [-0.6, -6, -0.5, 1, 6, 1],
							"uvNorth": [69, 44, 70, 50],
							"uvEast": [68, 44, 69, 50],
							"uvSouth": [71, 44, 72, 50],
							"uvWest": [70, 44, 71, 50],
							"uvUp": [70, 44, 69, 43],
							"uvDown": [71, 43, 70, 44]
						},
						{
							"coordinates": [-0.6, -8, -1, 1, 2, 2],
							"uvNorth": [96, 48, 97, 50],
							"uvEast": [94, 48, 96, 50],
							"uvSouth": [99, 48, 100, 50],
							"uvWest": [97, 48, 99, 50],
							"uvUp": [97, 48, 96, 46],
							"uvDown": [98, 46, 97, 48]
						}
					]
				},
				{
					"id": "right_saddle",
					"invertAxis": "xy",
					"translate": [4.9, 21.9, 0.5],
					"submodels": [
						{
							"id": "body_sub_3",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0.1, 0, 0],
							"boxes": [
								{
									"coordinates": [-0.5, -6, -0.5, 1, 6, 1],
									"uvNorth": [70, 44, 69, 50],
									"uvEast": [71, 44, 70, 50],
									"uvSouth": [72, 44, 71, 50],
									"uvWest": [69, 44, 68, 50],
									"uvUp": [69, 44, 70, 43],
									"uvDown": [70, 43, 71, 44]
								},
								{
									"coordinates": [-0.5, -8, -1, 1, 2, 2],
									"uvNorth": [97, 48, 96, 50],
									"uvEast": [99, 48, 97, 50],
									"uvSouth": [100, 48, 99, 50],
									"uvWest": [96, 48, 94, 50],
									"uvUp": [96, 48, 97, 46],
									"uvDown": [97, 46, 98, 48]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "front_left_leg",
			"id": "front_left_leg",
			"invertAxis": "xy",
			"translate": [3.5, -14, 10],
			"boxes": [
				{
					"coordinates": [-5, 8, -12, 3, 8, 4],
					"uvNorth": [5, 34, 8, 42],
					"uvEast": [1, 34, 5, 42],
					"uvSouth": [12, 34, 15, 42],
					"uvWest": [8, 34, 12, 42],
					"uvUp": [8, 34, 5, 30],
					"uvDown": [11, 30, 8, 34],
					"sizeAdd": 0.1
				}
			],
			"submodels": [
				{
					"id": "front_left_cannon",
					"invertAxis": "xy",
					"translate": [-3.5, 8, -11.5],
					"boxes": [
						{
							"coordinates": [-1.5, -5, 0, 3, 5, 3],
							"uvNorth": [4, 45, 7, 50],
							"uvEast": [1, 45, 4, 50],
							"uvSouth": [10, 45, 13, 50],
							"uvWest": [7, 45, 10, 50],
							"uvUp": [7, 45, 4, 42],
							"uvDown": [10, 42, 7, 45]
						}
					],
					"submodels": [
						{
							"id": "front_left_hoof",
							"invertAxis": "xy",
							"translate": [0, -5, 1.5],
							"boxes": [
								{
									"coordinates": [-2, -3, -2, 4, 3, 4],
									"uvNorth": [5, 54, 9, 57],
									"uvEast": [1, 54, 5, 57],
									"uvSouth": [13, 54, 17, 57],
									"uvWest": [9, 54, 13, 57],
									"uvUp": [9, 54, 5, 50],
									"uvDown": [13, 50, 9, 54]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "front_right_leg",
			"id": "front_right_leg",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [-3.5, -14, 10],
			"boxes": [
				{
					"coordinates": [2, 8, -12, 3, 8, 4],
					"uvNorth": [5, 34, 8, 42],
					"uvEast": [1, 34, 5, 42],
					"uvSouth": [12, 34, 15, 42],
					"uvWest": [8, 34, 12, 42],
					"uvUp": [8, 34, 5, 30],
					"uvDown": [11, 30, 8, 34],
					"sizeAdd": 0.1
				}
			],
			"submodels": [
				{
					"id": "front_right_cannon",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [3.5, 8, -10.5],
					"boxes": [
						{
							"coordinates": [-1.5, -5, -1, 3, 5, 3],
							"uvNorth": [4, 45, 7, 50],
							"uvEast": [1, 45, 4, 50],
							"uvSouth": [10, 45, 13, 50],
							"uvWest": [7, 45, 10, 50],
							"uvUp": [7, 45, 4, 42],
							"uvDown": [10, 42, 7, 45]
						}
					],
					"submodels": [
						{
							"id": "front_right_hoof",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -5, 0.5],
							"boxes": [
								{
									"coordinates": [-2, -3, -2, 4, 3, 4],
									"uvNorth": [5, 54, 9, 57],
									"uvEast": [1, 54, 5, 57],
									"uvSouth": [13, 54, 17, 57],
									"uvWest": [9, 54, 13, 57],
									"uvUp": [9, 54, 5, 50],
									"uvDown": [13, 50, 9, 54]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "back_left_leg",
			"id": "back_left_leg",
			"invertAxis": "xy",
			"translate": [3.5, -15, -9],
			"boxes": [
				{
					"coordinates": [-5.5, 8, 6.5, 4, 9, 5],
					"uvNorth": [21, 33, 25, 42],
					"uvEast": [16, 33, 21, 42],
					"uvSouth": [30, 33, 34, 42],
					"uvWest": [25, 33, 30, 42],
					"uvUp": [25, 33, 21, 28],
					"uvDown": [29, 28, 25, 33]
				}
			],
			"submodels": [
				{
					"id": "back_left_cannon",
					"invertAxis": "xy",
					"translate": [-3.5, 8, 10.5],
					"boxes": [
						{
							"coordinates": [-1.5, -5, -3, 3, 5, 3],
							"uvNorth": [19, 45, 22, 50],
							"uvEast": [16, 45, 19, 50],
							"uvSouth": [25, 45, 28, 50],
							"uvWest": [22, 45, 25, 50],
							"uvUp": [22, 45, 19, 42],
							"uvDown": [25, 42, 22, 45]
						}
					],
					"submodels": [
						{
							"id": "back_left_hoof",
							"invertAxis": "xy",
							"translate": [0, -5, -1.5],
							"boxes": [
								{
									"coordinates": [-2, -3, -2, 4, 3, 4],
									"uvNorth": [22, 54, 26, 57],
									"uvEast": [18, 54, 22, 57],
									"uvSouth": [30, 54, 34, 57],
									"uvWest": [26, 54, 30, 57],
									"uvUp": [26, 54, 22, 50],
									"uvDown": [30, 50, 26, 54]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "back_right_leg",
			"id": "back_right_leg",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [-3.5, -15, -9],
			"boxes": [
				{
					"coordinates": [1.5, 8, 6.5, 4, 9, 5],
					"uvNorth": [21, 33, 25, 42],
					"uvEast": [16, 33, 21, 42],
					"uvSouth": [30, 33, 34, 42],
					"uvWest": [25, 33, 30, 42],
					"uvUp": [25, 33, 21, 28],
					"uvDown": [29, 28, 25, 33]
				}
			],
			"submodels": [
				{
					"id": "back_right_cannon",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [3.5, 8, 10.5],
					"boxes": [
						{
							"coordinates": [-1.5, -5, -3, 3, 5, 3],
							"uvNorth": [19, 45, 22, 50],
							"uvEast": [16, 45, 19, 50],
							"uvSouth": [25, 45, 28, 50],
							"uvWest": [22, 45, 25, 50],
							"uvUp": [22, 45, 19, 42],
							"uvDown": [25, 42, 22, 45]
						}
					],
					"submodels": [
						{
							"id": "back_right_hoof",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -5, -1.5],
							"boxes": [
								{
									"coordinates": [-2, -3, -2, 4, 3, 4],
									"uvNorth": [22, 54, 26, 57],
									"uvEast": [18, 54, 22, 57],
									"uvSouth": [30, 54, 34, 57],
									"uvWest": [26, 54, 30, 57],
									"uvUp": [26, 54, 22, 50],
									"uvDown": [30, 50, 26, 54]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "child_front_left_leg",
			"id": "child_front_left_leg",
			"invertAxis": "xy",
			"translate": [3.5, -14, 10],
			"boxes": [
				{
					"coordinates": [-5, 8, -12, 3, 8, 4],
					"uvNorth": [5, 34, 8, 42],
					"uvEast": [1, 34, 5, 42],
					"uvSouth": [12, 34, 15, 42],
					"uvWest": [8, 34, 12, 42],
					"uvUp": [8, 34, 5, 30],
					"uvDown": [11, 30, 8, 34],
					"sizeAdd": 0.1
				}
			],
			"submodels": [
				{
					"id": "child_front_left_cannon",
					"invertAxis": "xy",
					"translate": [-3.5, 8, -11.5],
					"boxes": [
						{
							"coordinates": [-1.5, -5, 0, 3, 5, 3],
							"uvNorth": [4, 45, 7, 50],
							"uvEast": [1, 45, 4, 50],
							"uvSouth": [10, 45, 13, 50],
							"uvWest": [7, 45, 10, 50],
							"uvUp": [7, 45, 4, 42],
							"uvDown": [10, 42, 7, 45]
						}
					],
					"submodels": [
						{
							"id": "child_front_left_hoof",
							"invertAxis": "xy",
							"translate": [0, -5, 1.5],
							"boxes": [
								{
									"coordinates": [-2, -3, -2, 4, 3, 4],
									"uvNorth": [5, 54, 9, 57],
									"uvEast": [1, 54, 5, 57],
									"uvSouth": [13, 54, 17, 57],
									"uvWest": [9, 54, 13, 57],
									"uvUp": [9, 54, 5, 50],
									"uvDown": [13, 50, 9, 54]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "child_front_right_leg",
			"id": "child_front_right_leg",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [-3.5, -14, 10],
			"boxes": [
				{
					"coordinates": [2, 8, -12, 3, 8, 4],
					"uvNorth": [5, 34, 8, 42],
					"uvEast": [1, 34, 5, 42],
					"uvSouth": [12, 34, 15, 42],
					"uvWest": [8, 34, 12, 42],
					"uvUp": [8, 34, 5, 30],
					"uvDown": [11, 30, 8, 34],
					"sizeAdd": 0.1
				}
			],
			"submodels": [
				{
					"id": "child_front_right_cannon",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [3.5, 8, -10.5],
					"boxes": [
						{
							"coordinates": [-1.5, -5, -1, 3, 5, 3],
							"uvNorth": [4, 45, 7, 50],
							"uvEast": [1, 45, 4, 50],
							"uvSouth": [10, 45, 13, 50],
							"uvWest": [7, 45, 10, 50],
							"uvUp": [7, 45, 4, 42],
							"uvDown": [10, 42, 7, 45]
						}
					],
					"submodels": [
						{
							"id": "child_front_right_hoof",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -5, 0.5],
							"boxes": [
								{
									"coordinates": [-2, -3, -2, 4, 3, 4],
									"uvNorth": [5, 54, 9, 57],
									"uvEast": [1, 54, 5, 57],
									"uvSouth": [13, 54, 17, 57],
									"uvWest": [9, 54, 13, 57],
									"uvUp": [9, 54, 5, 50],
									"uvDown": [13, 50, 9, 54]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "child_back_left_leg",
			"id": "child_back_left_leg",
			"invertAxis": "xy",
			"translate": [3.5, -15, -9],
			"boxes": [
				{
					"coordinates": [-5.5, 6, 6.5, 4, 11, 5],
					"uvNorth": [21, 33, 25, 42],
					"uvEast": [16, 33, 21, 42],
					"uvSouth": [30, 33, 34, 42],
					"uvWest": [25, 33, 30, 42],
					"uvUp": [25, 33, 21, 28],
					"uvDown": [29, 28, 25, 33]
				}
			],
			"submodels": [
				{
					"id": "child_back_left_cannon",
					"invertAxis": "xy",
					"translate": [-3.5, 6, 10.5],
					"boxes": [
						{
							"coordinates": [-1.5, -6.7, -3, 3, 6.7, 3],
							"uvNorth": [19, 45, 22, 50],
							"uvEast": [16, 45, 19, 50],
							"uvSouth": [25, 45, 28, 50],
							"uvWest": [22, 45, 25, 50],
							"uvUp": [22, 45, 19, 42],
							"uvDown": [25, 42, 22, 45]
						}
					],
					"submodels": [
						{
							"id": "child_back_left_hoof",
							"invertAxis": "xy",
							"translate": [0, -6.7, -1.5],
							"boxes": [
								{
									"coordinates": [-2, -3, -2, 4, 3, 4],
									"uvNorth": [22, 54, 26, 57],
									"uvEast": [18, 54, 22, 57],
									"uvSouth": [30, 54, 34, 57],
									"uvWest": [26, 54, 30, 57],
									"uvUp": [26, 54, 22, 50],
									"uvDown": [30, 50, 26, 54]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "child_back_right_leg",
			"id": "child_back_right_leg",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [-3.5, -15, -9],
			"boxes": [
				{
					"coordinates": [1.5, 6, 6.5, 4, 11, 5],
					"uvNorth": [21, 33, 25, 42],
					"uvEast": [16, 33, 21, 42],
					"uvSouth": [30, 33, 34, 42],
					"uvWest": [25, 33, 30, 42],
					"uvUp": [25, 33, 21, 28],
					"uvDown": [29, 28, 25, 33]
				}
			],
			"submodels": [
				{
					"id": "child_back_right_cannon",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [3.5, 6, 10.5],
					"boxes": [
						{
							"coordinates": [-1.5, -6.7, -3, 3, 6.7, 3],
							"uvNorth": [19, 45, 22, 50],
							"uvEast": [16, 45, 19, 50],
							"uvSouth": [25, 45, 28, 50],
							"uvWest": [22, 45, 25, 50],
							"uvUp": [22, 45, 19, 42],
							"uvDown": [25, 42, 22, 45]
						}
					],
					"submodels": [
						{
							"id": "child_back_right_hoof",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -6.7, -1.5],
							"boxes": [
								{
									"coordinates": [-2, -3, -2, 4, 3, 4],
									"uvNorth": [22, 54, 26, 57],
									"uvEast": [18, 54, 22, 57],
									"uvSouth": [30, 54, 34, 57],
									"uvWest": [26, 54, 30, 57],
									"uvUp": [26, 54, 22, 50],
									"uvDown": [30, 50, 26, 54]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "headpiece",
			"id": "headpiece",
			"invertAxis": "xy",
			"translate": [0, -13, -6]
		},
		{
			"part": "left_ear",
			"id": "left_ear",
			"invertAxis": "xy",
			"translate": [0, -23, 9]
		},
		{
			"part": "right_ear",
			"id": "right_ear",
			"invertAxis": "xy",
			"translate": [0, -23, 9]
		},
		{
			"part": "neck",
			"id": "neck",
			"invertAxis": "xy",
			"translate": [0.05, -22, 9]
		},
		{
			"part": "mouth",
			"id": "mouth",
			"invertAxis": "xy",
			"translate": [0, -22, 9]
		},
		{
			"part": "mane",
			"id": "mane",
			"invertAxis": "xy",
			"translate": [0, -22, 9]
		},
		{
			"part": "noseband",
			"id": "noseband",
			"invertAxis": "xy",
			"translate": [0, -22, 9]
		},
		{
			"part": "left_bit",
			"id": "left_bit",
			"invertAxis": "xy",
			"translate": [0, -22, 9]
		},
		{
			"part": "right_bit",
			"id": "right_bit",
			"invertAxis": "xy",
			"translate": [0, -22, 9]
		},
		{
			"part": "tail",
			"id": "tail",
			"invertAxis": "xy",
			"translate": [0, -21, -11]
		},
		{
			"part": "left_rein",
			"id": "left_rein",
			"invertAxis": "xy",
			"translate": [2.5, -29, 13]
		},
		{
			"part": "right_rein",
			"id": "right_rein",
			"invertAxis": "xy",
			"translate": [-2.5, -29, 13]
		},
		{
			"part": "left_chest",
			"id": "left_chest",
			"invertAxis": "xy",
			"translate": [-6, -21, -18],
			"rotate": [0, 90, 0],
			"submodels": [
				{
					"id": "left_chest_rotation",
					"invertAxis": "xy",
					"translate": [6, 21, 18],
					"boxes": [
						{
							"coordinates": [-4, -8, -2, 8, 8, 3],
							"uvNorth": [105, 38, 113, 46],
							"uvEast": [102, 38, 105, 46],
							"uvSouth": [116, 38, 124, 46],
							"uvWest": [113, 38, 116, 46],
							"uvUp": [105, 35, 113, 38],
							"uvDown": [113, 35, 121, 38]
						}
					]
				}
			],
			"animations": [
				{
					"this.ry": "0"
				}
			]
		},
		{
			"part": "right_chest",
			"id": "right_chest",
			"invertAxis": "xy",
			"translate": [6, -21, -18],
			"rotate": [0, -90, 0],
			"submodels": [
				{
					"id": "right_chest_rotation",
					"invertAxis": "xy",
					"translate": [-6, 21, 18],
					"boxes": [
						{
							"coordinates": [-4, -8, -2, 8, 8, 3],
							"uvNorth": [105, 50, 113, 58],
							"uvEast": [102, 50, 105, 58],
							"uvSouth": [116, 50, 124, 58],
							"uvWest": [113, 50, 116, 58],
							"uvUp": [105, 47, 113, 50],
							"uvDown": [113, 47, 121, 50]
						}
					]
				}
			],
			"animations": [
				{
					"this.ry": "0"
				}
			]
		}
	]
}